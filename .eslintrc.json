{
	// Configuration for JavaScript files
	"root": true,
	"extends": ["airbnb-base", "plugin:tailwindcss/recommended", "prettier"],
	"env": {
		"browser": true,
		"es2021": true
	},
	"ignorePatterns": ["src/js/aos/*"],

	"overrides": [
		// Configuration for TypeScript files
		{
			"files": ["**/*.ts", "**/*.tsx"],
			"plugins": ["@typescript-eslint", "simple-import-sort", "tailwindcss"],
			"extends": ["plugin:tailwindcss/recommended", "airbnb-typescript", "prettier"],
			"parser": "@typescript-eslint/parser",
			"parserOptions": {
				"project": "./tsconfig.json",
				"sourceType": "module"
			},
			"rules": {}
		},
		// Configuration for Astro
		{
			"files": ["**/*.astro"],
			"plugins": ["@typescript-eslint", "unused-imports", "react", "simple-import-sort"],
			"extends": [
				"airbnb-typescript",
				"plugin:astro/recommended",
				"plugin:tailwindcss/recommended",
				"prettier"
			],
			"parser": "astro-eslint-parser",
			"processor": "astro/client-side-ts", // <- Uses the "client-side-ts" processor.

			// Parse the script in `.astro` as TypeScript by adding the following configuration.
			// It's the setting you need when using TypeScript.
			"parserOptions": {
				"parser": "@typescript-eslint/parser",
				"extraFileExtensions": [".astro"],
				"project": "./tsconfig.json"
			},

			"rules": {
				"import/extensions": [
					"error",
					"ignorePackages",
					{
						"js": "ignorePackages",
						"jsx": "never",
						"ts": "never",
						"tsx": "never",
						"": "never"
					}
				],
				"react/jsx-filename-extension": [1, { "extensions": [".astro"] }], // Accept jsx in astro files
				"react/react-in-jsx-scope": "off",
				// Avoid missing file extension errors in .astro files
				"import/no-unresolved": [
					"off",
					{
						"ignore": ["@/*", "astro-icon/", "astro"]
					}
				],
				// Disable no-unresolved rule for .astro files
				"react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
				"react/require-default-props": "off", // Allow non-defined react props as undefined,
				"react/no-unescaped-entities": 0,
				"react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
				"react/no-unknown-property": "off", // Allow us of class property within Astro
				"jsx-a11y/label-has-associated-control": [0, {}],
				"@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
				"@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
				"import/prefer-default-export": "off", // Named export is easier to refactor automatically
				"tailwindcss/classnames-order": [
					"warn",
					{
						"officialSorting": true
					}
				], // Follow the same ordering as the official plugin `prettier-plugin-tailwindcss`
				"tailwindcss/no-custom-classname": ["off"],
				"simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
				"simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
				"@typescript-eslint/no-unused-vars": "off",
				"unused-imports/no-unused-imports": "error",
				"unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }]
			}
		}
	]
}
