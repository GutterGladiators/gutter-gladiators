---
import Years from '@assets/images/10YEARS+.png';
import Logo from '@assets/images/gglogo.png';
import Announcement from '@components/Announcement.astro';
import Button from '@components/Button.astro';
import NavLink from '@components/Nav/NavLink.astro';
import Toggle from '@components/Nav/Toggle.astro';
import { Picture } from 'astro:assets';
import { Icon } from 'astro-icon/components';

interface Link {
	text: string;
	href: string;
	ariaLabel?: string;
	icon?: string;
}

export interface ActionLink {
	variant: 'primary' | 'secondary' | 'outline' | 'link';
	text: string;
	type: 'button' | 'submit' | 'reset' | 'link';
	icon?: string;
	href: string;
}

export interface Props {
	id?: string;
	links?: Link[];
	isFullWidth?: boolean;
	position?: string;
	actions?: ActionLink[];
}

const { id = 'header', links = [], isFullWidth = false, actions = [] } = Astro.props;
---

<!--class:List is clsx -->
<header
	class:list={[' bg-base z-40 mx-auto w-full bg shadow  bg-white  flex flex-col']}
	{...id ? { id } : {}}
>
	<Announcement
		text={['Fully insured', 'Licensed working at heights', 'Police Checked']}
		location='Servicing the North-West Coast of Tasmania'
	/>

	<div
		class:list={[
			'text-default py-4 px-6 mx-auto w-full flex items-center justify-center md:justify-between',
			{
				'max-w-7xl': !isFullWidth
			}
		]}
	>
		<div class='flex items-center md:hidden'>
			<Toggle />
		</div>

		<div
			class='*:border-bg-base mr-12 flex flex-1 grow items-center justify-center gap-12 divide-x md:justify-start'
		>
			<a href='/'>
				<img src={Logo.src} alt='Gutter Guardians Logo' class='w-[100px] lg:w-[120px]' />
			</a>

			<div class='hidden items-center gap-4 lg:flex'>
				<Picture src={Years} alt='logo' width={100} class='ml-12' />
				<p class='max-w-60 font-semibold'>Extensive Plumbing and Gutter Cleaning Experience</p>
			</div>
		</div>

		<div class:list={['hidden md:flex items-center  p-3 md:p-0']}>
			<div class='flex items-center justify-between gap-4 md:w-auto'>
				{
					actions.map((btnProps) => (
						<Button class='h-14 text-lg' {...btnProps}>
							<Icon name={btnProps.icon} />
						</Button>
					))
				}
			</div>
		</div>
	</div>
	<nav
		class='relative hidden size-full flex-1 items-center justify-center overflow-y-auto py-2 text-3xl text-default drop-shadow-2xl md:flex md:w-full md:overflow-x-auto md:overflow-y-visible md:text-lg'
		aria-label='Main navigation'
	>
		<ul
			class='m-auto flex w-full flex-col gap-8 py-8 font-semibold uppercase *:mx-auto md:w-auto md:flex-row md:gap-0 md:self-center md:py-3'
		>
			{
				links.map(({ text, href }, i) => (
					<NavLink href={href} text={text} class={`${i === 4 ? 'border-none' : ''}`} />
				))
			}

			<li class='mt-6 flex items-center justify-start gap-2 md:hidden'>
				<a
					href='https://www.facebook.com'
					aria-label='Gutter Gladiators Facebook'
					class='hover:primary cursor-pointer'
				>
					<Icon name='facebook' class='text-5xl' />
				</a>

				<a
					href='https://www.instagram.com'
					aria-label='Gutter Gladiators Instagram'
					class='cursor-pointer hover:text-primary'
				>
					<Icon name='instagram' class='text-5xl' />
				</a>
			</li>
		</ul>
	</nav>
</header>

<script>
	function mobileMenu() {
		const header = document.getElementById('header');
		const navContent = document.querySelector('#header nav');
		const hamburgerBtn = document.querySelector('[data-toggle-menu]');
		let isOpen = false;
		const toggleNav = () => {
			isOpen ? closeNav() : openNav();
			isOpen = !isOpen;
		};

		function openNav() {
			document.body.classList.add('overflow-hidden');
			header?.classList.add('h-dvh', 'expanded');
			hamburgerBtn?.classList.add('expanded');
			navContent?.classList.remove('fade-out', 'hidden');
			// ul?.classList.remove('fade-out');
			navContent?.classList.add('fade-in');
			// ul?.classList.add('fade-in');
		}

		function closeNav() {
			hamburgerBtn?.classList.remove('expanded');
			header?.classList.remove('expanded', 'overflow-hidden');
			document.body.classList.remove('overflow-hidden');
			navContent?.classList.remove('fade-in');
			navContent?.classList.remove('touch-none');

			// ul?.classList.remove('fade-in');
			// ul?.classList.add('fade-out');
			navContent?.classList.add('fade-out');
			header!.onanimationend = (e) => {
				if (e.animationName === 'fade-out') {
					header?.classList.remove('h-dvh');
					navContent?.classList.add('hidden');
				}
			};
		}

		// Close mobile menu on resize
		function handleResize() {
			closeNav();
			isOpen = false;
			navContent?.classList.remove('fade-out');
			navContent?.classList.add('hidden');
			header?.classList.remove('h-dvh');
		}

		function handleLinks() {
			const links = document.querySelectorAll('nav ul a');
			console.log(links);
		}

		return {
			toggleNav,
			handleResize,
			closeNav,
			handleLinks
		};
	}

	function init() {
		const { toggleNav, handleResize, closeNav, handleLinks } = mobileMenu();
		const navBtn = document.querySelector('[data-toggle-menu]');
		const navContent = document.querySelector('#header nav');
		const screenSize = window.matchMedia('(max-width: 767px)');
		navBtn?.addEventListener('click', () => toggleNav());
		screenSize.addEventListener('change', () => handleResize());
		navContent?.addEventListener('click', () => handleResize());
		handleLinks();
	}
	init();
	document.addEventListener('astro:after-swap', init);
</script>

<style>
	.fade-in {
		animation: fade-in ease-in-out 0.5s forwards;
	}

	.fade-out {
		animation: fade-out ease-in-out 0.5s forwards;
	}

	@keyframes fade-in {
		0% {
			display: none;
			opacity: 0;
		}
		1% {
			display: block;
			opacity: 0;
		}
		100% {
			display: block;
			opacity: 1;
		}
	}

	@keyframes fade-out {
		0% {
			display: block;
			opacity: 1;
		}
		99% {
			display: block;
			opacity: 0;
		}
		100% {
			display: none;
			opacity: 0;
		}
	}
</style>
